<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css">
<script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<div id="product">
  <div>
    <div>
      {% for media in product.media %}
        {% render 'product-media', media: media %}
      {% endfor %}
    </div>

    <div class="swiper">
      <div class="swiper-wrapper">
        {% for media in product.media %}
          <div class="swiper-slide">
            {% render 'product-media', media: media %}
          </div>
        {% endfor %}
      </div>

      <div class="swiper-pagination"></div>

      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    </div>
  </div>

  <div class="product-information">
    {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
      <input type="hidden" name="id" value="{{selected_variant.id}}">
      <p>{{ product.vendor }}</p>
      <h1>{{ product.title }}</h1>
      <p>{{ selected_variant.compare_at_price | money }}</p>
      <p>{{ selected_variant.price | money }}</p>
      {% if selected_variant.price < selected_variant.compare_at_price %}
        <span>Sale</span>
      {% endif %}
      {% unless product.has_only_default_variant %}
        {% comment %} Select variant JS {% endcomment %}
        <variant-selector data-url="{{product.url}}" data-section="{{section.id}}">
          {% for option in product.options_with_values %}
            <label for="Option-{{section.id}}-{{forloop.index0}}">{{ option.name }}</label>
            <div>
              <select name="options[{{option.name | escape}}]" id="Option-{{section.id}}-{{forloop.index0}}">
                {% for value in option.values %}
                  <option
                    value="{{value | escape}}"
                    {% if option.selected_value == value %}
                      selected="selected"
                    {% endif %}
                  >
                    {{ value }}
                  </option>
                {% endfor %}
              </select>
            </div>
            {% comment %} Select variant JS {% endcomment %}
            <script type="application/json">
              {{product.variants | json}}
            </script>
          {% endfor %}
        </variant-selector>
      {% endunless %}

      <div>
        <label for="quantity-{{section.id}}">Quantity</label>
        <input type="number" name="quantity" id="quantity-{{selected.id}}" value="1" min="1">
      </div>

      <p>{{ product.description }}</p>

      <button
        type="submit"
        name="add"
        {% if selected_variant.available == false %}
          disabled
        {% endif %}
      >
        {% if selected_variant.available == false %}
          Sold out
        {% else %}
          Add to Cart
        {% endif %}
      </button>
    {% endform %}
  </div>
</div>

{% comment %} Select variant JS {% endcomment %}
<script>
  
  
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener('change', this.onVariantChange);
    }

    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();

      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        {% comment %} this.updatePrice(); {% endcomment %}
      }
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
      console.log(this.options);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options
          .map((option, index) => {
            return this.options[index] === option;
          })
          .includes(false);

        if (findings) return variant;
      });

      console.log(this.currentVariant);
    }

    updateURL() {
      if (!this.currentVariant) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    {% comment %} updatePrice() {
      fetch(`${this.dataset.url}?varinat=${this.currentVariant.id}&section_id=${this.dataset.section}`)
      .this((response) => response.text())
      .this((responseText)) => {
        const id = `price-${this.dataset.section}`;
        const html = new DOMParser().parseFromString(responseText, 'text/html'));
        const oldPrice = document.getElementById(id);
        const newPrice = html.getElementById(id);
        if(oldPrice && newPrice){
          oldPrice.innerHTML = newPrice.innerHTML;
        }
      }
    } {% endcomment %}
  }

  customElements.define('variant-selector', VariantSelector);


</script>

<script>
  const swiper = new Swiper('.swiper', {
    direction: 'horizontal',

    pagination: {
      el: '.swiper-pagination',
    },

    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
  });
</script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant Selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_buttons",
      "name": "Checkout Buttons",
      "limit": 1
    }
  ]
}
{% endschema %}
